
services:
  pg-prod:
    image: postgres:latest
    environment:
      POSTGRES_USER: production
      POSTGRES_PASSWORD: prod1234
      POSTGRES_DB: next-saas
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U production -d next-saas"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    networks:
      - internal_net
    command: ["postgres", "-c", "log_min_messages=PANIC"]
  frontend:
    build:
      context: .
      dockerfile: Dockerfile-prod
      target: frontend
    image: trabalho-final-gces-hugo-moura-frontend:latest
    env_file:
      - .env.prod
    depends_on:
      - backend
    networks:
      - internal_net

  backend:
    build:
      context: .
      dockerfile: Dockerfile-prod
      target: backend
    image: trabalho-final-gces-hugo-moura-backend:latest
    env_file:
      - .env.prod
    depends_on:
      pg-prod:
        condition: service_healthy
    networks:
      - internal_net
    entrypoint: ["sh", "-c"]
    command: >
      "pnpm db:migrate && pnpm start"

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./certificados:/etc/nginx/ssl/
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - backend
    networks:
      - internal_net

networks:
  internal_net:
    driver: bridge